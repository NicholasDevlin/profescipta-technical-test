@{
    ViewData["Title"] = "Home";
}

<div class="container">
    <div class="card bg-transparent d-flex flex-column">
        <div class="d-flex justify-content-around px-3 py-3">
            <div>Keywords</div>
            <div>
                <input type="text" id="search-keyword" placeholder="Input here" />
            </div>
            <div>Order Date</div>
            <div class="d-flex flex-column">
                <input type="date" id="order-date" />
                <button id="searchBtn" class="mt-2 btn btn-primary">Search</button>
            </div>
        </div>
    </div>
    <div class="mt-2">
        <div>
            <a asp-controller="SalesOrder" asp-action="Editor" class="btn btn-danger me-2">Add New Data</a>
            <button class="btn btn-success">Export to excel</button>
        </div>
        <table id="so" class="table">
            <thead class="table-dark">
                <tr>
                    <th>No</th>
                    <th>Action</th>
                    <th>Sales Order</th>
                    <th>Order Date</th>
                    <th>Customer</th>
                </tr>
            </thead>
            <tbody class="table-light">
                <tr>
                    <td>(i+1)</td>
                    <td>
                        <a href="#" class="text-dark text-decoration-none" data-bs-toggle="tooltip" data-bs-title="Edit">
                            <ion-icon name="create-outline"></ion-icon>
                        </a>
                        <ion-icon data-bs-toggle="tooltip" data-bs-title="Delete" name="trash-outline"></ion-icon>
                    </td>
                    <td>Model[i].OrderNo</td>
                    <td>Model[i].OrderDate.Value.ToString("dd/MM/yyyy")</td>
                    <td>Model[i].Address</td>
                </tr>
                @*@for(var i = 0; i < Model.Count; i++)
{
}*@
            </tbody>
        </table>
    </div>
</div>

<script>
    var table;
    document.addEventListener('DOMContentLoaded', function () {
        table = new DataTable('#so', {
            ordering: false,
            searching: false,
            lengthChange: true,
            serverSide: true,
            ajax: function (data, callback, settings) {
                var filter = {
                    currentPage: Math.floor(settings._iDisplayStart / settings._iDisplayLength) + 1,
                    pageSize: 10,
                    keyword: document.querySelector('#search-keyword').value,
                    orderDate: document.querySelector('#order-date').value 
                };

                fetch('/SalesOrder/getSalesOrder?' + new URLSearchParams(filter))
                    .then(response => response.json())
                    .then(responseData => {
                        callback({
                            draw: settings.draw,
                            recordsTotal: responseData.totalCount, 
                            recordsFiltered: responseData.totalCount,
                            data: responseData.items 
                        });
                    })
                    .catch(error => console.error('Error fetching data:', error));
            },
            columns: [
                {
                    data: null,
                    render: function (data, type, row, meta) {
                        return meta.row + 1;
                    }
                },
                {
                    data: 'id',
                    render: function (data, type, row) {
                        return `
                        <a class="btn" href="/SalesOrder/Editor/${data}" data-bs-toggle="tooltip" data-bs-title="Edit"><ion-icon name="create-outline"></ion-icon></a>
                        <a class="btn" data-item-id="${data}" data-bs-toggle="tooltip" data-bs-title="Delete" onclick="deleteSalesOrder(${data})"><ion-icon name="trash-outline"></ion-icon></a>
                    `;
                    }
                },
                { data: 'orderNo', name: 'orderNo' },
                {
                    data: 'orderDate',
                    name: 'orderDate',
                    render: function (data, type, row) {
                        if (data) {
                            var date = new Date(data);
                            var day = ('0' + date.getDate()).slice(-2);
                            var month = ('0' + (date.getMonth() + 1)).slice(-2);
                            var year = date.getFullYear();
                            return `${day}/${month}/${year}`;
                        }
                        return ''; 
                    }
                },
                { data: 'customerName', name: 'customerName' }
            ]
        });

        document.querySelector('#searchBtn').addEventListener('click', function () {
            table.ajax.reload();
        });

        table.on('page', function () {
            var pageInfo = table.page.info();
            console.log('Current Page: ', pageInfo.page);
            var data = table.rows({ page: 'current' }).data();
            console.log('Current Page Data:', Array.from(data));
        });
    });

    function deleteSalesOrder(id) {
        if (confirm('Are you sure you want to delete this sales order?')) {
            fetch(`/SalesOrder/DeleteSO/${id}`, {
                method: 'DELETE',
            })
                .then(response => response.json())
                .then(data => {
                    debugger
                    alert(data.message); 
                    table.ajax.reload();
                    //const row = document.querySelector(`a[data-item-id="${id}"]`).closest('tr');
                    //row.remove();
                })
                .catch(error => {
                    alert('There was an error deleting the sales order.');
                    console.error('Error:', error);
                });
        }
    }
</script>

